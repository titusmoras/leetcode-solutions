//Given a List of words, return the words that can be typed using letters of alphabet
//on only one row's of American keyboard like the image below.

//Example 1:
//Input: ["Hello", "Alaska", "Dad", "Peace"]
//Output: ["Alaska", "Dad"]
//Note:
//You may use one character in the keyboard more than once.
//You may assume the input string will only contain letters of alphabet.

class Solution {
    public String[] findWords(String[] words) {
        
        //String singleLineWords[] = null;
        ArrayList <String> listSingleLineWords = new ArrayList<String>(); 
        
        Set<Character> topLineValuesSet = new HashSet<Character>(Arrays.asList('q','Q','w','W','e','E','r','R','t','T','y','Y','u','U','i','I','o','O','p','P'));
        Set<Character> midLineValuesSet = new HashSet<Character>
            (Arrays.asList('a','A','s','S','d','D','f','F','g','G','h','H','j','J','k','K','l','L'));
        Set<Character> bottomLineValuesSet = new HashSet<Character>(Arrays.asList('z','Z','x','X','c','C','v','V','b','B','n','N','m','M'));
        
        for (int i = 0; i < words.length; i++)
        if( isSingleLineString(words[i], topLineValuesSet, midLineValuesSet,bottomLineValuesSet ) ){
            listSingleLineWords.add(words[i]); 
        } 
        
        
        return  (String[])listSingleLineWords.toArray(new String[listSingleLineWords.size()]);
        //return singleLineWords;
    }
           
       boolean isSingleLineString(String s, Set<Character> top, Set<Character> mid, Set<Character> bottom ){
           Set <Character> selected = null;
           if(s.length() ==0)
               return false;
           if(top.contains(s.charAt(0)))
              selected = top;
           else if (mid.contains(s.charAt(0)))
              selected = mid;
           else if (bottom.contains(s.charAt(0)))
              selected = bottom;
                    
           for (int i = 1; i < s.length(); i++){
               if(! selected.contains(s.charAt(i)))
                   return false;
           }       
                    
           return true;         
                    
       }    
           
}
